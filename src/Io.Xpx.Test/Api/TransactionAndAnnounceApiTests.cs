/* 
 * Proximax P2P Storage REST API
 *
 * Proximax P2P Storage REST API
 *
 * OpenAPI spec version: v0.0.1
 * Contact: proximax.storage@proximax.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Io.Xpx.Client;
using Io.Xpx.Api;
using Io.Xpx.Model;

namespace Io.Xpx.Test
{
    /// <summary>
    ///  Class for testing TransactionAndAnnounceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TransactionAndAnnounceApiTests
    {
        private TransactionAndAnnounceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TransactionAndAnnounceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TransactionAndAnnounceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TransactionAndAnnounceApi
            //Assert.IsInstanceOfType(typeof(TransactionAndAnnounceApi), instance, "instance is a TransactionAndAnnounceApi");
        }

        
        /// <summary>
        /// Test AnnounceRequestPublishDataSignatureUsingPOST
        /// </summary>
        [Test]
        public void AnnounceRequestPublishDataSignatureUsingPOSTTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RequestAnnounceDataSignature requestAnnounceDataSignature = null;
            //var response = instance.AnnounceRequestPublishDataSignatureUsingPOST(requestAnnounceDataSignature);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetXPXTransactionUsingGET
        /// </summary>
        [Test]
        public void GetXPXTransactionUsingGETTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string nemHash = null;
            //var response = instance.GetXPXTransactionUsingGET(nemHash);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
    }

}
