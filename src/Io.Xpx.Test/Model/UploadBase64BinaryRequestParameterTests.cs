/* 
 * Proximax P2P Storage REST API
 *
 * Proximax P2P Storage REST API
 *
 * OpenAPI spec version: v0.0.1
 * Contact: proximax.storage@proximax.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Io.Xpx.Api;
using Io.Xpx.Model;
using Io.Xpx.Client;
using System.Reflection;

namespace Io.Xpx.Test
{
    /// <summary>
    ///  Class for testing UploadBase64BinaryRequestParameter
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class UploadBase64BinaryRequestParameterTests
    {
        // TODO uncomment below to declare an instance variable for UploadBase64BinaryRequestParameter
        //private UploadBase64BinaryRequestParameter instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of UploadBase64BinaryRequestParameter
            //instance = new UploadBase64BinaryRequestParameter();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UploadBase64BinaryRequestParameter
        /// </summary>
        [Test]
        public void UploadBase64BinaryRequestParameterInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" UploadBase64BinaryRequestParameter
            //Assert.IsInstanceOfType<UploadBase64BinaryRequestParameter> (instance, "variable 'instance' is a UploadBase64BinaryRequestParameter");
        }

        /// <summary>
        /// Test the property 'ContentType'
        /// </summary>
        [Test]
        public void ContentTypeTest()
        {
            // TODO unit test for the property 'ContentType'
        }
        /// <summary>
        /// Test the property 'Data'
        /// </summary>
        [Test]
        public void DataTest()
        {
            // TODO unit test for the property 'Data'
        }
        /// <summary>
        /// Test the property 'Keywords'
        /// </summary>
        [Test]
        public void KeywordsTest()
        {
            // TODO unit test for the property 'Keywords'
        }
        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Test]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

    }

}
